[tox]
envlist = py26,py27,pypy,py33,py34,py35,pep8,py3pep8

[testenv]
deps =
    coverage
    ./cryptography
    ./cryptography/vectors
    pytest
    pretend
    iso8601
    hypothesis
    pyasn1_modules
passenv = ARCHFLAGS LDFLAGS CFLAGS INCLUDE LIB LD_LIBRARY_PATH USERNAME SOFTHSM2_CONF CRYPTOGRAPHY_PKCS11_PATH CRYPTOGRAPHY_PKCS11_SLOT_ID CRYPTOGRAPHY_PKCS11_FLAGS CRYPTOGRAPHY_PKCS11_USER_TYPE CRYPTOGRAPHY_PKCS11_PASSWORD
commands =
    pip list
    # run only the tests for pkcs11, and only a subset. prepare for a lot of invocations!
    coverage run --parallel-mode -m pytest --capture=no --strict --backend=pkcs11 cryptography/tests/hazmat/primitives/test_aes.py -k"TestAESModeECB or TestAESModeCBC" {posargs}
    coverage run --parallel-mode -m pytest --capture=no --strict --backend=pkcs11 cryptography/tests/hazmat/primitives/test_3des.py {posargs}
    coverage run --parallel-mode -m pytest --capture=no --strict --backend=pkcs11 cryptography/tests/hazmat/primitives/test_hash_vectors.py {posargs}
    coverage run --parallel-mode -m pytest --capture=no --strict --backend=pkcs11 cryptography/tests/hazmat/primitives/test_hmac_vectors.py {posargs}
    coverage run --parallel-mode -m pytest --capture=no --strict --backend=pkcs11 cryptography/tests/hazmat/primitives/test_rsa.py -k"not test_pss_minimum_key_size_for_digest and not test_pss_verify_salt_length_too_long and not test_pss_signing_salt_length_too_long" {posargs}
    coverage combine
    coverage report -m

[testenv:pep8]
deps =
    flake8
    flake8-importorder
    pep8-naming
commands =
    flake8 .

[flake8]
exclude = .tox,*.egg,.git,_build
select = E,W,F,N,I
application-import-names = cryptography_pkcs11,tests
